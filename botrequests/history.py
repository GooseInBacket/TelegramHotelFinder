from typing import Union
from settings import CLEAR_HISTORY
from contextlib import closing
import sqlite3


def make_history(user_id: str) -> Union[str, list]:
    """
    –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥ –ø–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–∏–¥ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
    :param user_id: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á—å—é –∏—Å—Ç—Ç–æ—Ä–∏—é –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å
    :return:
    """
    with closing(sqlite3.connect('history.db')) as con:
        cursor = con.cursor()
        in_db = cursor.execute("SELECT * FROM users_data WHERE user_id=?", (user_id,)).fetchone()
        if in_db:
            data = cursor.execute(
                'SELECT * FROM users_data WHERE user_id={}'.format(user_id)).fetchall()
            return ['‚Ñπ {} ({})‚Ñπ\n\n{}'.format(*item[2:]) for item in data]
        else:
            return CLEAR_HISTORY


def add_to_history(user_id: str, content: list) -> None:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å—å –∏—Å—Ç–æ—Ä–∏–∏ –≤ –ë–î"""
    to_save = [create_content(user_id, content)]

    with closing(sqlite3.connect('history.db')) as con:
        cursor = con.cursor()
        cursor.executemany("""INSERT INTO users_data(
        user_id, 
        command, 
        msg_date, 
        data) VALUES(?, ?, ?, ?);""", to_save)
        con.commit()


def create_table():
    with closing(sqlite3.connect('history.db')) as con:
        cursor = con.cursor()
        cursor.execute("""CREATE TABLE IF NOT EXISTS users_data(
        id INT PRIMaRY KEY,
        user_id TEXT,
        command TEXT, 
        msg_date TEXT,
        data TEXT);
        """)


def create_string(string: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –æ—Ç–µ–ª–µ–º –≤ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–π –≤–∏–¥

    0 - –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–µ–ª—è
    1 - –∞–¥—Ä–µ—Å
    3 - —Ü–µ–Ω–∞
    4 - —Å—Å—ã–ª–∫–∞

    :param string: —Å—Ç—Ä–æ–∫–∞ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    :return: str
    """
    return f'üè® {string[0]}\n|{string[1]}\n|{string[3]}\n|{string[4]}'


def create_content(user_id, content: list) -> tuple:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ç—å—é–ø–ª, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î"""
    command = content[0]
    msg_date = content[1]
    data = '\n\n'.join(['\n'.join([create_string(string)]) for string in content[2]])
    return user_id, command, msg_date, data
